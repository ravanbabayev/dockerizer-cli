name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binaries
        run: |
          mkdir -p build/windows build/linux build/darwin
          
          # Windows
          GOOS=windows GOARCH=amd64 go build -o build/windows/dockerizer.exe cmd/main.go
          
          # Linux
          GOOS=linux GOARCH=amd64 go build -o build/linux/dockerizer cmd/main.go
          
          # macOS
          GOOS=darwin GOARCH=amd64 go build -o build/darwin/dockerizer cmd/main.go

      - name: Prepare release packages
        run: |
          mkdir -p release
          
          # Copy support files to each platform directory
          cp -r supported build/windows/
          cp -r supported build/linux/
          cp -r supported build/darwin/
          
          # Create archives
          cd build
          
          # Windows
          cd windows
          zip -r ../../release/dockerizer-windows-amd64.zip ./*
          cd ..
          
          # Linux
          cd linux
          tar czf ../../release/dockerizer-linux-amd64.tar.gz ./*
          cd ..
          
          # macOS
          cd darwin
          tar czf ../../release/dockerizer-darwin-amd64.tar.gz ./*
          cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/dockerizer-windows-amd64.zip
            release/dockerizer-linux-amd64.tar.gz
            release/dockerizer-darwin-amd64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 