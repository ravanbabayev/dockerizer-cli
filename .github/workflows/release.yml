name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binaries
        run: |
          # Create fresh directories
          mkdir -p release
          
          # Build for each platform
          echo "Building for Windows..."
          GOOS=windows GOARCH=amd64 go build -o dockerizer.exe cmd/main.go
          mkdir -p dockerizer-windows
          mv dockerizer.exe dockerizer-windows/
          cp -r supported dockerizer-windows/
          cd dockerizer-windows && zip -r ../release/dockerizer-windows-amd64.zip * && cd ..
          rm -rf dockerizer-windows
          
          echo "Building for Linux..."
          GOOS=linux GOARCH=amd64 go build -o dockerizer cmd/main.go
          mkdir -p dockerizer-linux
          mv dockerizer dockerizer-linux/
          cp -r supported dockerizer-linux/
          cd dockerizer-linux && tar czf ../release/dockerizer-linux-amd64.tar.gz * && cd ..
          rm -rf dockerizer-linux
          
          echo "Building for macOS..."
          GOOS=darwin GOARCH=amd64 go build -o dockerizer cmd/main.go
          mkdir -p dockerizer-darwin
          mv dockerizer dockerizer-darwin/
          cp -r supported dockerizer-darwin/
          cd dockerizer-darwin && tar czf ../release/dockerizer-darwin-amd64.tar.gz * && cd ..
          rm -rf dockerizer-darwin

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/dockerizer-windows-amd64.zip
            release/dockerizer-linux-amd64.tar.gz
            release/dockerizer-darwin-amd64.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 